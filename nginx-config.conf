# MMG Website Nginx Configuration
# This configuration is optimized for Laravel with SSL support

# Upstream for PHP-FPM
upstream php-fpm {
    server unix:/var/run/php/php8.3-fpm.sock;
}

# HTTP Server (redirects to HTTPS)
server {
    listen 80;
    listen [::]:80;
    server_name garage.micronet.mv www.garage.micronet.mv;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS Server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name garage.micronet.mv www.garage.micronet.mv;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/garage.micronet.mv/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/garage.micronet.mv/privkey.pem;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'self';" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Document Root
    root /var/www/mmgweb/public;
    index index.php index.html index.htm;
    
    # Hide Nginx version
    server_tokens off;
    
    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    
    # Main location block
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # PHP-FPM Configuration
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php-fpm;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTP_PROXY "";
        
        # Security headers for PHP
        fastcgi_hide_header X-Powered-By;
        fastcgi_read_timeout 300;
    }
    
    # Admin Panel (Filament)
    location /admin {
        try_files $uri $uri/ /index.php?$query_string;
        
        # Additional security for admin
        limit_req zone=api burst=20 nodelay;
        
        # Prevent access to sensitive files
        location ~* \.(env|log|sql|conf|ini)$ {
            deny all;
        }
    }
    
    # POS System
    location /pos {
        try_files $uri $uri/ /index.php?$query_string;
        
        # Rate limiting for POS
        limit_req zone=api burst=30 nodelay;
    }
    
    # Booking System
    location /booking {
        try_files $uri $uri/ /index.php?$query_string;
        
        # Rate limiting for booking
        limit_req zone=api burst=20 nodelay;
    }
    
    # API Endpoints
    location /web-api/ {
        try_files $uri $uri/ /index.php?$query_string;
        
        # Rate limiting for API
        limit_req zone=api burst=50 nodelay;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
    }
    
    # Static Files
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # Security: Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~* \.(env|log|sql|conf|ini|bak|backup|old|orig|save|swp|tmp)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Security: Deny access to vendor and storage directories
    location ~ ^/(vendor|storage|bootstrap/cache)/ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Security: Deny access to composer files
    location ~* composer\.(json|lock)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Security: Deny access to package files
    location ~* package(-lock)?\.json$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Error Pages
    error_page 404 /index.php;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    # Logging
    access_log /var/log/nginx/mmgweb_access.log;
    error_log /var/log/nginx/mmgweb_error.log;
}

# HTTP/2 Server Push (Optional)
# Uncomment if you want to enable HTTP/2 server push for critical resources
# location = /css/app.css {
#     add_header Link "</css/app.css>; rel=preload; as=style";
# }
# 
# location = /js/app.js {
#     add_header Link "</js/app.js>; rel=preload; as=script";
# }
